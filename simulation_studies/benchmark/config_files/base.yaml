defaults:
  - _self_

PDE:
  name: "diff"
  # is_in_divergence_form: False
  # diffusion_matrix: "torch.eye(2, device=x.device).repeat(x.shape[0], 1, 1) if backend == torch else np.repeat(np.eye(2)[np.newaxis, :, :], x.shape[0], axis=0)"
  # f: "4.0 * hmpinn.PDEs.utils.ones(x, backend=backend)"
  # u: "(x[:, 0]**2 + x[:, 1]**2)"
  # grad_u: "2.0 * hmpinn.PDEs.utils.stack((x[:, 0], x[:, 1]), dim=1, backend=backend)"
  # BC: "backend.reshape((x[:, 0]**2 + x[:, 1]**2), (-1,1))"
  # BC: "(x[:, 0]**2 + x[:, 1]**2)"
  PDE_kwargs: {}

model:
  type: "v2"
  params:
    nodes_hidden_layers: [64, 64, 64, 64, 64, 64]
    activation_function: "gelu"
    has_embedding_layer: False

train:
  batch_size: 128 
  n_epochs: 15000 
  optimizer: "Adam"
  optimizer_threshold: 7000
  loss_BC_weight: 20
  save_BC_loss: True
  boundary_batch_ratio: 1
  seed: 42
  interior_sampler: null
  boundary_sampler: null

solver:
  nx: 21
  ny: null
  p: 3

